import{_ as s,c as t,o as e,ag as n,j as a}from"./chunks/framework.DPDPlp3K.js";const d=JSON.parse('{"title":"数组归约运算","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/js-07.数组归约运算.md","filePath":"algorithm/js-07.数组归约运算.md"}'),i={name:"algorithm/js-07.数组归约运算.md"};function l(r,p,_,u,c,o){return e(),t("div",null,p[0]||(p[0]=[n('<h1 id="数组归约运算" tabindex="-1">数组归约运算 <a class="header-anchor" href="#数组归约运算" aria-label="Permalink to &quot;数组归约运算&quot;">​</a></h1><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h2><p>给定一个整数数组 nums、一个 reducer 函数 fn 和一个初始值 init，返回通过依次对数组的每个元素执行 fn 函数得到的最终结果。</p><p>通过以下操作实现这个结果：val = fn(init, nums[0])，val = fn(val, nums[1])，val = fn(val, nums[2])，... 直到处理数组中的每个元素。然后返回 val 的最终值。</p><p>如果数组的长度为 0，则函数应返回 init。</p><p>请你在不使用内置数组方法的 Array.reduce 前提下解决这个问题。</p><p>示例 1：</p><p>输入： nums = [1,2,3,4]</p>',8),a("p",{return:"",accum:"","+":"","curr;":""},"fn = function sum(accum, curr)",-1),n("<p>init = 0</p><p>输出：10</p><p>解释：</p><p>初始值为 init=0 。</p><p>(0) + nums[0] = 1</p><p>(1) + nums[1] = 3</p><p>(3) + nums[2] = 6</p><p>(6) + nums[3] = 10</p><p>Val 最终值为 10。</p><p>示例 2：</p><p>输入：</p><p>nums = [1,2,3,4]</p>",12),a("p",{return:"",accum:"","+":"",curr:"","*":"","curr;":""},"fn = function sum(accum, curr)",-1),n("<p>init = 100</p><p>输出：130</p><p>解释：</p><p>初始值为 init=100 。</p><p>(100) + nums[0]^2 = 101</p><p>(101) + nums[1]^2 = 105</p><p>(105) + nums[2]^2 = 114</p><p>(114) + nums[3]^2 = 130</p><p>Val 最终值为 130。</p><p>示例3:</p><p>输入：</p><p>nums = []</p>",12),a("p",{return:"","0;":""},"fn = function sum(accum, curr)",-1),n(`<p>init = 25</p><p>输出：25</p><p>解释：这是一个空数组，所以返回 init 。</p><p>提示：</p><p>0 &lt;= nums.length &lt;= 1000</p><p>0 &lt;= nums[i] &lt;= 1000</p><p>0 &lt;= init &lt;= 1000</p><h2 id="答案" tabindex="-1">答案 <a class="header-anchor" href="#答案" aria-label="Permalink to &quot;答案&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var reduce = function(nums, fn, init) {</span></span>
<span class="line"><span>    let val=init;</span></span>
<span class="line"><span>    for(let i=0;i&lt;nums.length;i++){</span></span>
<span class="line"><span>        val=fn(val,nums[i]);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    return val;</span></span>
<span class="line"><span>};</span></span></code></pre></div>`,9)]))}const h=s(i,[["render",l]]);export{d as __pageData,h as default};
