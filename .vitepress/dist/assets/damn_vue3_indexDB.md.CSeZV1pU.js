import{_ as s,c as e,o as t,ag as l,j as a}from"./chunks/framework.DPDPlp3K.js";const b=JSON.parse('{"title":"indexDB 使用","description":"","frontmatter":{},"headers":[],"relativePath":"damn/vue3/indexDB.md","filePath":"damn/vue3/indexDB.md"}'),o={name:"damn/vue3/indexDB.md"};function i(p,n,d,r,u,c){return t(),e("div",null,n[0]||(n[0]=[l(`<h1 id="indexdb-使用" tabindex="-1">indexDB 使用 <a class="header-anchor" href="#indexdb-使用" aria-label="Permalink to &quot;indexDB 使用&quot;">​</a></h1><h2 id="打开数据库" tabindex="-1">打开数据库 <a class="header-anchor" href="#打开数据库" aria-label="Permalink to &quot;打开数据库&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const request = indexedDB.open(&quot;MyDatabase&quot;, 1); // 参数：数据库名、版本号</span></span></code></pre></div><h2 id="数据库初始化-监听事件" tabindex="-1">数据库初始化（监听事件） <a class="header-anchor" href="#数据库初始化-监听事件" aria-label="Permalink to &quot;数据库初始化（监听事件）&quot;">​</a></h2><ul><li><strong>结构变更只能在这里面进行</strong></li><li><strong>触发情况：</strong><ul><li>第一次创建open</li><li>open时传入版本号变化</li></ul></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>request.onupgradeneeded = function(event) {</span></span>
<span class="line"><span>  const db = event.target.result;</span></span>
<span class="line"><span>  // 创建对象仓库（类似于表）</span></span>
<span class="line"><span>  const store = db.createObjectStore(&quot;users&quot;, { keyPath: &quot;id&quot; }); // 主键为 id</span></span>
<span class="line"><span>  // 可选：创建索引</span></span>
<span class="line"><span>  store.createIndex(&quot;nameIndex&quot;, &quot;name&quot;, { unique: false });</span></span>
<span class="line"><span>};</span></span></code></pre></div><h2 id="连接成功" tabindex="-1">连接成功 <a class="header-anchor" href="#连接成功" aria-label="Permalink to &quot;连接成功&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>request.onsuccess = function(event) {</span></span>
<span class="line"><span>  const db = event.target.result;</span></span>
<span class="line"><span>  console.log(&quot;数据库打开成功&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  // 可以进行增删改查等操作</span></span>
<span class="line"><span>  const transaction = db.transaction(&quot;users&quot;, &quot;readwrite&quot;);</span></span>
<span class="line"><span>  const store = transaction.objectStore(&quot;users&quot;);</span></span>
<span class="line"><span>  store.add({ id: 1, name: &quot;Alice&quot;, age: 25 });</span></span>
<span class="line"><span>};</span></span></code></pre></div><h2 id="连接失败" tabindex="-1">连接失败 <a class="header-anchor" href="#连接失败" aria-label="Permalink to &quot;连接失败&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>request.onerror = function(event) {</span></span>
<span class="line"><span>  console.error(&quot;数据库打开失败&quot;, event.target.error);</span></span>
<span class="line"><span>};</span></span></code></pre></div><h2 id="基本操作" tabindex="-1">基本操作 <a class="header-anchor" href="#基本操作" aria-label="Permalink to &quot;基本操作&quot;">​</a></h2>`,11),a("table",{tabindex:"0"},[a("thead",null,[a("tr",null,[a("th",null,"操作"),a("th",null,"示例代码")])]),a("tbody",null,[a("tr",null,[a("td",null,"添加数据"),a("td",null,'store.add({ id: 1, name: "Tom" })')]),a("tr",null,[a("td",null,"获取数据"),a("td",null,"store.get(1)")]),a("tr",null,[a("td",null,"更新数据"),a("td",null,'store.put({ id: 1, name: "Tom Updated" })')]),a("tr",null,[a("td",null,"删除数据"),a("td",null,"store.delete(1)")]),a("tr",null,[a("td",null,"遍历数据"),a("td",{"css-module":"."},"store.openCursor().onsuccess = function(event)")]),a("tr",null,[a("td",null,"清空仓库"),a("td",null,"store.clear()")])])],-1)]))}const q=s(o,[["render",i]]);export{b as __pageData,q as default};
