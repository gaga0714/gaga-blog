import{_ as t,c as n,o as e,ag as p}from"./chunks/framework.DPDPlp3K.js";const h=JSON.parse('{"title":"计数器","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/js-02.计数器.md","filePath":"algorithm/js-02.计数器.md"}'),o={name:"algorithm/js-02.计数器.md"};function s(l,a,c,r,i,u){return e(),n("div",null,a[0]||(a[0]=[p(`<h1 id="计数器" tabindex="-1">计数器 <a class="header-anchor" href="#计数器" aria-label="Permalink to &quot;计数器&quot;">​</a></h1><h2 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h2><p>给定一个整型参数 n，请你编写并返回一个 counter 函数。这个 counter 函数最初返回 n，每次调用它时会返回前一个值加 1 的值 ( n , n + 1 , n + 2 ，等等)。</p><p>示例 1：</p><p>输入：</p><p>n = 10</p><p>[&quot;call&quot;,&quot;call&quot;,&quot;call&quot;]</p><p>输出：[10,11,12]</p><p>解释：</p><p>counter() = 10 // 第一次调用 counter()，返回 n。</p><p>counter() = 11 // 返回上次调用的值加 1。</p><p>counter() = 12 // 返回上次调用的值加 1。</p><p>示例 2：</p><p>输入：</p><p>n = -2</p><p>[&quot;call&quot;,&quot;call&quot;,&quot;call&quot;,&quot;call&quot;,&quot;call&quot;]</p><p>输出：[-2,-1,0,1,2]</p><p>解释：counter() 最初返回 -2。然后在每个后续调用后增加 1。</p><p>提示：</p><p>-1000 &lt;= n &lt;= 1000</p><p>0 &lt;= calls.length &lt;= 1000</p><p>calls[i] === &quot;call&quot;</p><h2 id="答案" tabindex="-1">答案 <a class="header-anchor" href="#答案" aria-label="Permalink to &quot;答案&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var createCounter = function(n){</span></span>
<span class="line"><span>    return counter = function(){</span></span>
<span class="line"><span>        return n++;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="扩展" tabindex="-1">扩展 <a class="header-anchor" href="#扩展" aria-label="Permalink to &quot;扩展&quot;">​</a></h2><p><code>a++</code>和<code>++a</code></p><p>+在前先加再返回,+在后先返回再加</p>`,27)]))}const q=t(o,[["render",s]]);export{h as __pageData,q as default};
