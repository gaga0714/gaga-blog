import{_ as e,c as t,o as s,ag as n}from"./chunks/framework.DPDPlp3K.js";const _=JSON.parse('{"title":"返回传递的参数的长度","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/js-09.返回传递的参数的长度.md","filePath":"algorithm/js-09.返回传递的参数的长度.md"}'),p={name:"algorithm/js-09.返回传递的参数的长度.md"};function r(o,a,l,i,h,c){return s(),t("div",null,a[0]||(a[0]=[n(`<h1 id="返回传递的参数的长度" tabindex="-1">返回传递的参数的长度 <a class="header-anchor" href="#返回传递的参数的长度" aria-label="Permalink to &quot;返回传递的参数的长度&quot;">​</a></h1><h2 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h2><p>请你编写一个函数 argumentsLength，返回传递给该函数的参数数量。</p><p>示例 1：</p><p>输入：args = [5]</p><p>输出：1</p><p>解释：</p><p>argumentsLength(5); // 1</p><p>只传递了一个值给函数，因此它应返回 1。</p><p>示例 2：</p><p>输入：args = [{}, null, &quot;3&quot;]</p><p>输出：3</p><p>解释：</p><p>argumentsLength({}, null, &quot;3&quot;); // 3</p><p>传递了三个值给函数，因此它应返回 3。</p><p>提示：</p><p>args 是一个有效的 JSON 数组</p><p>0 &lt;= args.length &lt;= 100</p><h2 id="答案" tabindex="-1">答案 <a class="header-anchor" href="#答案" aria-label="Permalink to &quot;答案&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var argumentsLength = function(...args) {</span></span>
<span class="line"><span>    return args.length;</span></span>
<span class="line"><span>};</span></span></code></pre></div><h2 id="扩展" tabindex="-1">扩展 <a class="header-anchor" href="#扩展" aria-label="Permalink to &quot;扩展&quot;">​</a></h2><p><a href="./../damn/css/剩余参数语法糖.html">剩余参数语法糖</a></p><p><code>...args</code>在函数中<code>args</code>就相当于一个数组，有所有数组有的属性和方法</p>`,23)]))}const u=e(p,[["render",r]]);export{_ as __pageData,u as default};
