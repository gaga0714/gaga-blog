import{_ as d,c as a,o as e,ag as l}from"./chunks/framework.DPDPlp3K.js";const _=JSON.parse('{"title":"call & apply & bind 对比","description":"","frontmatter":{},"headers":[],"relativePath":"damn/javascript/call&apply&bind对比.md","filePath":"damn/javascript/call&apply&bind对比.md"}'),c={name:"damn/javascript/call&apply&bind对比.md"};function o(n,t,r,p,i,b){return e(),a("div",null,t[0]||(t[0]=[l('<h1 id="call-apply-bind-对比" tabindex="-1">call &amp; apply &amp; bind 对比 <a class="header-anchor" href="#call-apply-bind-对比" aria-label="Permalink to &quot;call &amp; apply &amp; bind 对比&quot;">​</a></h1><table tabindex="0"><thead><tr><th>方法名</th><th>参数形式</th><th>是否立即调用</th><th>返回值类型</th><th>举例</th></tr></thead><tbody><tr><td><code>call</code></td><td>单个参数<br>不支持分批传参</td><td>是</td><td>执行结果</td><td><code>fn.call(obj, 1, 2)</code></td></tr><tr><td><code>apply</code></td><td>数组<br>不支持分批传参</td><td>是</td><td>执行结果</td><td><code>fn.apply(obj, [1, 2])</code></td></tr><tr><td><code>bind</code></td><td>列表<br>支持分批传参</td><td><strong>否</strong></td><td>新函数</td><td><code>const newFn = fn.bind(obj, 1);</code><br> <code>newFn(2);</code></td></tr></tbody></table><hr><p><code>bind()</code>可以更好实现<a href="./柯里化.html">柯里化</a></p>',4)]))}const h=d(c,[["render",o]]);export{_ as __pageData,h as default};
