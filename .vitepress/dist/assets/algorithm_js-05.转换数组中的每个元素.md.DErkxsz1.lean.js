import{_ as e,c as s,o as l,j as a,ag as t,a as r}from"./chunks/framework.DPDPlp3K.js";const f=JSON.parse('{"title":"转换数组中的每个元素","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/js-05.转换数组中的每个元素.md","filePath":"algorithm/js-05.转换数组中的每个元素.md"}'),p={name:"algorithm/js-05.转换数组中的每个元素.md"};function i(o,n,c,d,u,h){return l(),s("div",null,n[0]||(n[0]=[a("h1",{id:"转换数组中的每个元素",tabindex:"-1"},[r("转换数组中的每个元素 "),a("a",{class:"header-anchor",href:"#转换数组中的每个元素","aria-label":'Permalink to "转换数组中的每个元素"'},"​")],-1),a("h2",{id:"问题",tabindex:"-1"},[r("问题 "),a("a",{class:"header-anchor",href:"#问题","aria-label":'Permalink to "问题"'},"​")],-1),a("p",null,"编写一个函数，这个函数接收一个整数数组 arr 和一个映射函数 fn ，通过该映射函数返回一个新的数组。",-1),a("p",null,"返回数组的创建语句应为 returnedArray[i] = fn(arr[i], i) 。",-1),a("p",null,"请你在不使用内置方法 Array.map 的前提下解决这个问题。",-1),a("p",null,"示例 1:",-1),a("p",{return:"",n:"","+":"","1;":""},"输入：arr = [1,2,3], fn = function plusone(n)",-1),a("p",null,"输出：[2,3,4]",-1),a("p",null,"解释：",-1),a("p",null,"const newArray = map(arr, plusone); // [2,3,4]",-1),a("p",null,"此映射函数返回值是将数组中每个元素的值加 1。 示例 2:",-1),a("p",{return:"",n:"","+":"","i;":""},"输入：arr = [1,2,3], fn = function plusI(n, i)",-1),a("p",null,"输出：[1,3,5]",-1),a("p",null,"解释：此映射函数返回值根据输入数组索引增加每个值。",-1),a("p",null,"示例 3:",-1),a("p",{return:"","42;":""},"输入：arr = [10,20,30], fn = function constant()",-1),t("",10)]))}const m=e(p,[["render",i]]);export{f as __pageData,m as default};
